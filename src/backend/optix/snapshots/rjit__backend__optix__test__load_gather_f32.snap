---
source: src/backend/optix/test.rs
expression: jit.kernel_debug()
---
===============================================
Kernel 12085608055086202351:

.version 8.0
.target sm_86
.address_size 64

.const .align 8 .b8 params[32];
.entry __raygen__cujit(){

	.reg.b8   %b <8>; .reg.b16 %w<8>; .reg.b32 %r<8>;
	.reg.b64  %rd<8>; .reg.f32 %f<8>; .reg.f64 %d<8>;
	.reg.pred %p <8>;

	call (%r0), _optix_get_launch_index_x, ();
	ld.const.u32 %r1, [params + 4];
	add.u32 %r0, %r0, %r1;

body:

	// [0]: ScheduleVar { op: Data, deps: [], ty: F32, param_ty: None, reg: 5, buf: Some(0), tex: None, accel: None, literal: 0, size: 0 } =>

	// [1]: ScheduleVar { op: Data, deps: [], ty: U32, param_ty: Input, reg: 6, buf: Some(1), tex: None, accel: None, literal: 0, size: 3 } =>
	ld.const.u64 %rd0, [params+16];
	mad.wide.u32 %rd0, %r0, 4, %rd0;
	ld.global.cs.u32 %r6, [%rd0];

	// [2]: ScheduleVar { op: Literal, deps: [], ty: Bool, param_ty: None, reg: 7, buf: None, tex: None, accel: None, literal: 1, size: 1 } =>
	mov.pred %p7, 0x1;


	// [3]: ScheduleVar { op: Gather, deps: [SVarId(0), SVarId(1), SVarId(2)], ty: F32, param_ty: Output, reg: 4, buf: Some(2), tex: None, accel: None, literal: 0, size: 3 } =>
	ld.const.u64 %rd0, [params+8];
	mad.wide.u32 %rd3, %r6, 4, %rd0;
	ld.global.nc.f32 %f4, [%rd3];

	// Store:
	ld.const.u64 %rd0, [params + 24]; // rd0 <- params[offset]
	mad.wide.u32 %rd0, %r0, 4, %rd0; // rd0 <- Index * ty.size() + params[offset]
	st.global.cs.f32 [%rd0], %f4; // (Index * ty.size() + params[offset])[Index] <- var

	ret;
}

